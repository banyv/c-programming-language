#include<stdio.h>
#include<stdbool.h>
int place[8]={0};    //第n个皇后所占位置的列号
bool flag[8]={1,1,1,1,1,1,1,1};//表示第col列是否可占，1表示未占
bool d1[15]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};//上对角线是否可占
bool d2[15]={1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};//下对角线是否可占
//上边用bool判断是否可占，使棋盘中避开负数
int number=0;  //统计解的数量（总共有92个解）

void print();
void gernerate(int n);

int main()
{
    gernerate(0);
    return 0;
}

     void gernerate(int n)
{
     int col;
     for(col=0;col<8;col++)//每个皇后都有8种可能的列
     {
        if(flag[col]&&d1[n-col+7]&&d2[n+col])//判断位置
       {   
         place[n]=col;   //在n行col列摆放皇后
         flag[col]=false;  //占领第col列
         d1[n-col+7]=false;  //占领两个对角线
         d2[n+col]=false;
         if(n<7)    //如果8个皇后没有摆完，下一行递归摆放皇后
         gernerate(n+1);
         else
         print();


         //回溯：其他可行方案

         flag[col]=true;
         d1[n-col+7]=true;
         d2[n+col]=true;



        }
       

     }



}

  void print()   //打印结果，第n个皇后所占位置的列号

{
    int col,i,j;
    number++;
    printf("No. %d\n",number);
    //printf("皇后的排列结果是：")
    /*for(col=0;col<8;col++)
       printf("%d行%d列"，col，place[col]);
       printf("\n");*/

    int table[8][8]={0};
    for(col=0;col<8;col++)
         table[col][place[col]]=1;
    for(i=0;i<8;i++)
    {
         for(j=0;j<8;j++)
         {
             printf("%d",table[j][i]);
         }
        printf("\n");

    }



}
