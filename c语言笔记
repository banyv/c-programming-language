//#include<stdio.h>;
//int main(){
//const 修饰厂变量。前边加了const之后后边不能在改这个变量了；
//     int num=4;
//    printf("num=%d\n",num);
//    num=8;
//    printf("new num=%d",num);
//   const int n=10;//n是变量，但又有常属性，所以我们说n是常变量
//   int arr[n]={1,2,3,4,5,6,7,8,9};//理论来说
//   //是错误的
//    return 0;
//}
//


//#define 定义的标识符常量
//#define MAX 10
//#include<stdio.h>;
//
//
//int main (){
//    int arr[MAX]={0};
//    printf("%d\n",MAX);
//    return 0;
//
//}


//枚举常量
//arry循环
/*
#include<stdio.h>
int main(){

 int arry[3]={1,2,3};
   for(int i=0;i<3;i++){

       printf("result=%d\n",arry[i]);

   }

return 0;
}
*/

//枚举  enum
//#include <stdio.h>
//enum Sex{
//    MALE,
//    FEMALE,
//    SECRET
//
//};
//
//enum Color{
//    RED,
//    BLUE,
//    YELLOW
//};
//int main(){
//    //enum Sex s= MALE;
//    enum Color c=BLUE;
//    printf("%d\n",MALE);
//    printf("%d\n",FEMALE);
//    printf("%d\n",SECRET);
//
//    return 0;
//}

//#include <stdio.h>
//int  main(){
//  char arr1[]={'a','b','c',0};
//  printf("%s\n ",arr1);
//  return 0;
//}
//

//#include <stdio.h>
//#include <string.h>
//
//int main(){
//    char arr1[]="abc";
//    char arr2[]={'a','b','c'};  //第二个答案是随机值，未知的，不知道啥时候会遇到\0来停止
//    printf("%d\n",strlen(arr1));
//    printf("%d\n",strlen(arr2));
//    printf("%d\n",strlen("c:\test\32\test.c"))// 结果是13  \t是转义字符，相当于一个
//\32又转成了ascii码，所以最后长度是13
//    return 0;
//}


/*
#include<stdio.h>
int main(){
    int i=0;
    printf("shu ru zi fu\n");
    scanf("%d",&i);
    if (i<10){
        printf("this %d is  very small!\n",i);

    }else{
        printf("oh,it is very big!");
    }




    return 0;
}



*/


/*
#include <stdio.h>
#include <string.h>
int main(){
printf("加入比特\n");
printf("你要好好学习吗？\n");
int i=0;
scanf("%d",&i);
if(i=1){

    printf("那你就好好学习吧");
}


    return 0;
}*/

/*
#include <stdio.h>
int main(){
    int i=0;
    do{
        printf("敲代码\n");
        i++;
    }while(i<100);
    printf("终于敲了99行代码了！");
    return 0;
}

*/


/*
#include <stdio.h>

 int Add(int x,int y){   //定义一个相加的函数
  int z=x+y;
  return z;
}
int main(){
   int num1=10;
   int num2=20;
   int sum=0;
  sum= Add(num1, num2); //将接收值输入这个相加的函数
   printf ("%d",sum);
   return 0;
}

*/
//
//#include<stdio.h>
//int Add(int x,int y){
//    int z=0;
//    return z=x*y;
//
//}
//
//int main(){
//    int a=0;
//    int b=0;
//    printf("请输入两个数字\n");
//
//    scanf("%d %d",&a,&b);
//
//    int sum= Add(a,b);
//    printf("num=%d",sum);
//    return 0;
//}

//#include <stdio.h>
//int main(){
//    int b=0;
//    int arr[6];
//    for(int i=0;i<6;i++){
//
//        arr[i]=scanf("%d",&b);
//    }
//
//
//
//  for(int i=0;i<6;i++) {
//
//        printf("%d\n",arr[i]);
//
//
//
//  }
//
//
//
//
//
//    return 0;
//}

/*
//移位符
//<<1 左移一位  >>1 右移一位
#include<stdio.h>
int main(){
 int a=1;
 int b=a<<2;
 printf("%d",b);

     直接移动之后输出结果是不会变的，必须移位之后赋给一个数才行。
}
*/


/*
//类型重定义 typedef  将原来类型重定义成为一个自己觉得好写或者适合的类型
#include <stdio.h>
int main(){
    typedef int i;
    i a=10;
    i b=100;
    printf("%d",a*b);


    return 0;
}
 */




/*
#include<stdio.h>
void test(){
    static int a=1;
    a++;
    printf("%d\n",a);
}
int main(){
    int i=0;
    while(i<5)
    {
        test();
        i++;
    }
    return 0;
}


*/

/*
//extern 调用外部定义的全局变量函数  调用的 add.c 里面的ggg

 //static改变了变量的作用域 让静态的全局变量只能在自己所在的源文件内部使用，出了源文件就没法在使用了
#include <stdio.h>
int main(){
    extern int ggg;
    printf("%d",ggg);
    return 0;
}
 */

/*
//取a的地址   取指符号是&
#include<stdio.h>
int main(){
    int a=100;
      int *p=&a;              //有一种变量是用来存放地址的——指针变量
    printf("%p\n",p);
    printf("%p\n",&a);//%p是打印地址符
    *p=200;
    printf("a=%d\n",a);
    printf("a=%d",*p);   //在这里这个*p代表的就是a

    //*p  解引用操作符
    //*p=20;  将通过p找到的a的值改成20
    return 0;


}
*/




/*

#include<stdio.h>

int main(){
    char a='d';

    char* p=&a; //char*  只是说类型是char*
    printf("a=%c\n",*p);
    *p='f';
    printf("a=%c",a);
    return 0;
}
*/

/*
#include<stdio.h>
int main(){
    double r;
    double pi=3.14159;
    scanf("%lf",&r);
    printf("%.4lf %.4lf %.4lf",2*r,2*pi*r,pi*r*r);



}
 */






/*
//struct 结构体
#include <stdio.h>
#include <String.h>
struct  Book{
    char name[20]; //字符串才会加【10】
    int spend;
    int num;
    int danjia;
};
int main(){
   struct Book b1={"aaa",30,40,10};

  struct Book* p=&b1;  //struct类型的指针这样写   struct 结构体名* p=b1;


  //  (*p).name="bbb";  //name不是变量，而是一个数组所以无法这样赋值
  strcpy(b1.name,"bbb");    //字符串拷贝函数，用来改指针函数值
                             //要加头文件  #include <String.h>


printf("书名=%s 花费=%d 数量=%d 单价=%d",b1.name,b1.spend,b1.num,b1.danjia);
    printf("%s",p->name);   //指针调用之后就成了->
    return 0;
}


*/


 //判断一个数是否为奇数

/*
#include<stdio.h>
int main(){
    int a;
    scanf("%d",&a);
    if(a%2==1){
        printf("这个数是奇数");
    }else
    {
        printf("这个数是偶数");
    }
    return 0;
}
 */



/*
//遍历1-100之间的奇数
#include<stdio.h>
int main(){
  int arr[100]={0};
    printf("遍历奇数\n");
   for(int i=1;i<=100;i++){
       arr[i]=i;

       if(arr[i]%2==1){

           printf("%d\n",arr[i]);

       }


   }

}
 */




//判断10的阶乘
/*
#include<stdio.h>

int i=1;
int j=1;
int n=10;
int main()
{
    //夹杂一个判断
    if(n==0||n==1)
    {
        printf("输入错误！");
        return 1;
    }
    else
    {
        printf("判断式子成立\n");

    }


    while(i<=n)
    {
        i++;
        j=j*i;


    }

    printf("%d的阶乘是%d",n,j);
    return 0;
}
*/



/*
//递归
#include<stdio.h>
int f( int n){
    if(n<=1){
        return 1;
    }else{
        return  (n*f(n-1));
    }
}
int main(){
int t,n;
 scanf("%d",&n);
 t=f(n);
 printf("%d",t);


}
 */
